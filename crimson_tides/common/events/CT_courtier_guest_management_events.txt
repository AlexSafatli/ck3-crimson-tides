courtier_guest_management.2001 = {
  hidden = yes
  trigger = {
    is_pool_character = yes # Can cease to be in the pool between it queuing and executing
  }

  immediate = {
    #Am I lost in the void?
    if = {
      limit = { NOT = { exists = location } }

      #Oops, no good! Go someplace. (family is also moved with this effect)
      fallback_move_to_pool_effect = yes
    }

    #Don't I have the "last_visited_ruler" variable? (= it ran out or I'm from some weird source that doesn't set var)
    if = {
      limit = { NOT = { exists = var:last_visited_ruler } }

      if = { # If character is prune-able, prune.
        limit = {
          pool_character_is_pruneable_trigger = yes
        }
        if = {
          limit = {
            age < root.age_65_racial_equivalent
          }
          death = { death_reason = death_accident }
        }
        else = {
          death = { death_reason = death_old_age }
        }
      }
      else = { # Otherwise, go somewhere else.
        fallback_move_to_pool_effect = yes
      }
    }

    if = {
      limit = { is_alive = yes } #Because we might just have killed you and then ðŸŽµnothing else mattersðŸŽµ

      #Develop
      if = {
        limit = { is_adult = yes }
        pool_character_development_effect = yes
      }

      #Is my pool full? Then move
      if = {
        limit = {
          location = {
            exists = province_owner
            local_pool_is_full_trigger = yes
          }
        }

        location.province_owner = {
          random_neighboring_and_across_water_top_liege_realm_owner = {
            limit = {
              exists = capital_province
              capital_province = { local_pool_is_full_trigger = no }
            }
            capital_province = { save_scope_as = destination }
          }
        }

        if = {
          limit = { exists = scope:destination }
          every_traveling_family_member = {
            limit = { NOT = { is_in_pool_at = scope:destination } }
            move_to_pool_at = scope:destination
          }
        }
        else = {
          fallback_move_to_pool_effect = yes
        }
      }
    }
  }
}